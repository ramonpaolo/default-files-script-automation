version: "3.8"

services:
    nodejs:
        build: 
            dockerfile: ./docker/node.dockerfile
            context: .
        image: r4deu51/
        container_name: \*/
        ports:
            - "3000"
        networks:
            - network
        environment:
            - NODE_ENV=production
        healthcheck:
            test: ["curl", "http://localhost:3000"]
            interval: 1m00s
            timeout: 5s
            retries: 2
            start_period: 30s

    nginx:
        build: 
            dockerfile: ./docker/nginx.dockerfile
            context: .
        image: r4deu51/
        container_name: \*/
        ports:
            - "80:80"
            - "443:443"
        networks:
            - network
        healthcheck:
            test: ["curl", "http://localhost"]
            interval: 1m00s
            timeout: 5s
            retries: 2
            start_period: 30s

    mongo:
        image: mongo:alpine
        container_name: \*/
        networks:
            - network
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=mongo
            - MONGO_INITDB_ROOT_PASSWORD=mongo

    postgres:
        image: postgres:alpine
        container_name: asdsad
        networks:
            - network
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_USER=postgres
        restart: always

networks:
    network:
        driver: bridge