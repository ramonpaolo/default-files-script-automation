version: "3.8"

services:
    server:
        build: 
            dockerfile: ./docker/node-dev.dockerfile
            context: .
        container_name: server_
        image: r4deu51/server_
        ports:
            - "3000:3000"
        networks:
            - network
        environment:
            - NODE_ENV=development
            - APP_ENV=development
        env_file:
            - ./.env
        depends_on:
            - redis
            - postgres
            - mongo
            - lavin

    tests-e2e:
        command: yarn test:dev:e2e
        container_name: tests_e2e_
        image: r4deu51/server_
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env.test
        depends_on:
            - redis
            - postgres
            - mongo
            - lavin

    tests-unit:
        command: yarn test:dev:unit
        container_name: tests_unit_
        image: r4deu51/server_
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env.test
        depends_on:
            - redis
            - postgres
            - mongo
            - lavin

    tests:
        command: yarn test:dev
        container_name: tests_
        image: r4deu51/server_
        volumes:
            - ./:/app:rw
            - /app/node_modules
        env_file:
            - ./.env.test
        depends_on:
            - redis
            - postgres
            - mongo
            - lavin

    nginx:
        build: 
            dockerfile: ./docker/nginx.dockerfile
            context: .
        container_name: nginx_
        image: r4deu51/nginx_
        ports:
            - "80:80"
            - "443:443"
        networks:
            - network

    redis:
        image: redis:alpine
        container_name: redis_
        networks:
            - network
        restart: always

    postgres:
        image: postgres:15.4-alpine
        container_name: postgres_
        environment:
            - POSTGRES_USER=$POSTGRES_USERNAME
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        networks:
            - network
        restart: always

    mongo:
        image: mongo:7.0.1
        container_name: mongo_
        environment:
            - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
        networks:
            - network
        restart: always

    grafana:
        image: grafana/grafana:8.0.6
        container_name: grafana_
        ports:
            - "3001:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=$GRAFANA_USERNAME
            - GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_PASSWORD
        networks:
            - network

    lavin:
        image: cloudamqp/lavinmq:1.2.2
        container_name: lavinmq_
        ports:
            - "15672:15672"
        networks:
            - network
        restart: always

networks:
    network:
        driver: bridge
